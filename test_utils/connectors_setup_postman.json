{
	"info": {
		"_postman_id": "38c7ad95-d92e-44f4-aae7-d50adfa14cb8",
		"name": "debezium",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. Create postgres connector",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"name\": \"test-postgres-connector\",\r\n \"config\": {\r\n \"connector.class\": \"io.debezium.connector.postgresql.PostgresConnector\",\r\n \"tasks.max\": \"1\",\r\n \"database.hostname\": \"postgres\",\r\n \"database.port\": \"5432\",\r\n \"database.user\": \"postgres\",\r\n \"database.password\": \"postgres\",\r\n \"database.dbname\" : \"test\",\r\n \"database.server.name\": \"dbserver1\",\r\n \"transforms\": \"route\",\r\n \"transforms.route.type\": \"org.apache.kafka.connect.transforms.RegexRouter\",\r\n \"transforms.route.regex\": \"([^.]+)\\\\.([^.]+)\\\\.([^.]+)\",\r\n \"transforms.route.replacement\": \"$3\"\r\n }\r\n}"
				},
				"url": {
					"raw": "http://localhost:8083/connectors/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"connectors",
						""
					]
				},
				"description": "ddd"
			},
			"response": []
		},
		{
			"name": "2. Check connectors registration",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://localhost:8083/connectors/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"connectors",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "3. Check connectors registration task",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://localhost:8083/connectors/test-postgres-connector",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"connectors",
						"test-postgres-connector"
					]
				}
			},
			"response": []
		},
		{
			"name": "3. Delete postgres connector",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://localhost:8083/connectors/test-postgres-connector",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"connectors",
						"test-postgres-connector"
					]
				}
			},
			"response": []
		},
		{
			"name": "4. Elastic sink",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"elastic-sink\",\r\n    \"config\": {\r\n        \"connector.class\": \"io.confluent.connect.elasticsearch.ElasticsearchSinkConnector\",\r\n        \"tasks.max\": \"1\",\r\n        \"topics\": \"test_table\",\r\n        \"connection.url\": \"http://elastic:9200\",\r\n        \"transforms\": \"unwrap,key\",\r\n        \"transforms.unwrap.type\": \"io.debezium.transforms.UnwrapFromEnvelope\",\r\n        \"transforms.key.type\": \"org.apache.kafka.connect.transforms.ExtractField$Key\",\r\n        \"transforms.key.field\": \"id\",\r\n        \"key.ignore\": \"false\",\r\n        \"type.name\": \"test_table\"\r\n    }\r\n}"
				},
				"url": {
					"raw": "http://localhost:8083/connectors/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"connectors",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "5. Verify elastic index",
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://localhost:9200/test_table/_search",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9200",
					"path": [
						"test_table",
						"_search"
					]
				}
			},
			"response": []
		}
	]
}