FROM debezium/connect:0.9

# Download ElasticSearch Connector
ENV KAFKA_CONNECT_ELASTICSEARCH_VERSION=4.1.2-lkd-r0
ENV ELASTIC_PLUGIN=https://archive.landoop.com/lkd/packages/connectors/third-party/kafka-connect-elasticsearch/kafka-connect-elasticsearch-${KAFKA_CONNECT_ELASTICSEARCH_VERSION}.tar.gz

# Install ElastiSearch connector by copying it to `KAFKA_CONNECT_PLUGINS_DIR`
RUN echo $KAFKA_CONNECT_PLUGINS_DIR

RUN curl -s ${ELASTIC_PLUGIN} -o plugin.tar.gz
RUN tar -xzf plugin.tar.gz -C $KAFKA_CONNECT_PLUGINS_DIR
RUN ls $KAFKA_CONNECT_PLUGINS_DIR
RUN rm -f plugin.tar.gz;
RUN ls

# Install Dockerize to be able to eg. wait for Postgres or ElasticSearch startup
USER root
RUN yum -y update && yum -y install wget

ENV DOCKERIZE_VERSION v0.6.1
RUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
    && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
    && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz


ENV KEY_CONVERTER=io.confluent.connect.avro.AvroConverter
ENV VALUE_CONVERTER=io.confluent.connect.avro.AvroConverter
ENV CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL=http://schema_registry:8081
ENV CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL=http://schema_registry:8081
ENV INTERNAL_KEY_CONVERTER=io.confluent.connect.avro.AvroConverter
ENV INTERNAL_VALUE_CONVERTER=io.confluent.connect.avro.AvroConverter